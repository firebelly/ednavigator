// Utilities

// Clearfix
@mixin clearfix {
  *zoom: 1;
  &:before, &:after {
    content: "\0020";
    display: block;
    height: 0;
    overflow: hidden;
  }
  &:after {
    clear: both;
  }
}

// Share links flex style
@mixin shareLinksFlex {
  display: flex;

  > div + div {
    margin-top: 0;
    margin-left: 20px;
    padding-left: 21px;
    position: relative;
    &::before {
      left: 0;
      bottom: 0;
      width: 1px;
      content: '';
      height: 40px;
      display: flex;
      position: absolute;
      background-color: $black;
    }
  }
}

// Treated Image Mixin
@mixin treatedImage {
  width: 100%;
  height: 0;
  position: relative;
  &::before {
    top: 0;
    left: 0;
    bottom: 0;
    z-index: 1;
    width: 100%;
    opacity: .4;
    content: '';
    position: absolute;
    background-color: #AAABAC;
  }

  .treated-image {
    top: 0;
    left: 0;
    bottom: 0;
    width: 100%;
    position: absolute;
    background-size: cover;
    background-position: center;
    &::before,
    &::after {
      top: 0;
      left: 0;
      bottom: 0;
      width: 100%;
      content: '';
      position: absolute;
    }
    &::before {
      mix-blend-mode: color;
      background-color: $tan;
    }
    &::after {
      opacity: .2;
      background-color: #676A6D;
      mix-blend-mode: color-burn;
    }
  }
}

// Responsive mixins by Andy Richardson (@andimal): https://github.com/andimal/sass-responsive-mixin-madness
@mixin media-xs() {
  @media screen and (max-width: $breakpoint-sm - 1) {
    @content;
  }
}
@mixin media-sm() {
  @media screen and (min-width: $breakpoint-sm) {
    @content;
  }
}
@mixin media-md() {
  @media screen and (min-width: $breakpoint-md) {
    @content;
  }
}
@mixin media-lg() {
  @media screen and (min-width: $breakpoint-lg) {
    @content;
  }
}
@mixin media-nav() {
  @media screen and (min-width: $breakpoint-nav) {
    @content;
  }
}
@mixin media-xl() {
  @media screen and (min-width: $breakpoint-xl) {
    @content;
  }
}

// On-the fly media-queries
@mixin screen($res-min, $res-max) {
  @media screen and (min-width: $res-min) and (max-width: $res-max) {
    @content;
  }
}
@mixin max-screen($res) {
  @media screen and (max-width: $res) {
    @content;
  }
}
@mixin min-screen($res) {
  @media screen and (min-width: $res) {
    @content;
  }
}