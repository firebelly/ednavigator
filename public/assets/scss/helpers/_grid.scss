// Grid

// Global grid vars
$columns: 24;
$col: 100% * 1 / $columns;

// Add the 'grid' class to any container
// that you wish to hold a grid
.grid {
  @include clearfix;
}
.flex-grid {
  @include media-lg {
    display: flex;
  }
}

@include media-lg {
  [class*='col-'] {
    float: left;
  }
  [class*='col-'][class*='-right'] {
    float: right;
  }

  // SPACING:
  // If you need them spaced with padding,
  // just add "spaced" class to the ".grid" container.
  // If a column item needs to be spaced but also
  // has a background color then add an inner container
  // to handle the background — use the non-specific
  // '-inner' class if you need to:
  // <div class="grid spaced">
  //   <div class="col-1-2 -left">
  //     <div class="-inner" style="background:black;">
  //       (content)
  //     </div>
  //   </div>
  // </div>
  .grid.spaced {
    margin-left: -#{$global-spacing};
    width: calc(100% + #{$global-spacing * 2});

    [class*='col-'] {
      padding: 0 #{$global-spacing};
    }
  }
  // If you need the grid to have a gutter,
  // add 'gutter' as a class to the '.grid' container
  .grid.gutter {
    padding-left: $global-spacing;

    [class*='col-'] {
      padding-right: $global-spacing;
    }
  }

  // 'col' classes
  // The convention is 'col-' followed by a ratio, 
  // which is written as (for example) '1-2' for '1/2'.
  // 1/3 = 'col-1-3', 2/3 = 'col-2-3', etc.

  // Halves
  .col-1 {
    width: 100%;
  }
  .col-1-2 {
    width: 50%;
  }
  // Thirds
  .col-1-3 {
    width: 33.3333%;
  }
  .col-2-3 {
    width: 66.6666%;
  }
  // Fourths
  .col-1-4 {
    width: 25%;
  }
  .col-3-4 {
    width: 75%;
  }
  // Fifths
  .col-1-5 {
    width: 20%;
  }
  .col-2-5 {
    width: 40%;
  }
  .col-3-5 {
    width: 60%;
  }
  .col-4-5 {
    width: 80%;
  }
  // Sixths
  .col-1-6 {
    width: 16.6666%;
  }
  .col-5-6 {
    width: 83.3333%;
  }
  // Eighths
  .col-1-8 {
    width: 12.5%;
  }
  .col-3-8 {
    width: 37.5%;
  }
  .col-5-8 {
    width: 62.5%;
  }
  .col-7-8 {
    width: 87.5%;
  }
}